{
  "openapi": "3.0.1",
  "info": {
    "title": "Swagger Express API",
    "version": "1.0.0",
    "description": "A simple Express API with Swagger documentation"
  },
  "servers": [
    {
      "url": "http://localhost:5001/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user in the system with the provided details. The user role can be either 'user' or 'admin'. If successful, the new user is registered and their information is saved in the database.",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the user"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the user account"
                  },
                  "address": {
                    "type": "string",
                    "description": "The address of the user (optional)"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone number of the user (optional)"
                  },
                  "role": {
                    "type": "string",
                    "description": "The role of the user",
                    "enum": ["user", "admin"]
                  }
                },
                "example": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "password": "securePassword123",
                  "address": "123 Main St, Anytown, USA",
                  "phone": "+1234567890",
                  "role": "user"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request - Invalid input or user already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "description": "Authenticates a user with their email and password. On successful login, a JWT token is returned, which can be used for subsequent requests that require authentication.",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the user account"
                  }
                },
                "example": {
                  "email": "johndoe@example.com",
                  "password": "securePassword123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully - JWT token provided"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          }
        }
      }
    },
    "/auth/users": {
      "get": {
        "summary": "Get all users - Only admin can access this route",
        "description": "Retrieves a list of all users in the system. This route is restricted to users with the 'admin' role. The response includes user details such as id, name, email, address, phone, role, and active status.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The user ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the user"
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address of the user"
                      },
                      "address": {
                        "type": "string",
                        "description": "The address of the user"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone number of the user"
                      },
                      "role": {
                        "type": "string",
                        "description": "The role of the user (user or admin)"
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Indicates whether the user account is active"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only admin can access this route"
          }
        }
      }
    },
    "/auth/users/{id}": {
      "get": {
        "summary": "Get user by ID - Only logged users can access this route",
        "description": "Retrieves detailed information for a specific user by their ID. This route is accessible to both 'admin' and 'user' roles, but only admins can access details of other users.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The user ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the user"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email address of the user"
                    },
                    "address": {
                      "type": "string",
                      "description": "The address of the user"
                    },
                    "phone": {
                      "type": "string",
                      "description": "The phone number of the user"
                    },
                    "role": {
                      "type": "string",
                      "description": "The role of the user (user or admin)"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Indicates whether the user account is active"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only logged users can access this route"
          }
        }
      },
      "put": {
        "summary": "Update user by ID - Only logged users can access this route",
        "description": "Updates the details of a specific user by their ID. Users can update their own details, while admins can update details for any user.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the user"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the user account"
                  },
                  "address": {
                    "type": "string",
                    "description": "The address of the user"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone number of the user"
                  },
                  "role": {
                    "type": "string",
                    "description": "The role of the user",
                    "enum": ["user", "admin"]
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Indicates whether the user account is active"
                  }
                },
                "example": {
                  "name": "Jane Doe",
                  "email": "janedoe@example.com",
                  "password": "newSecurePassword123",
                  "address": "456 Elm St, Anytown, USA",
                  "phone": "+1234567890",
                  "role": "user",
                  "active": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "403": {
            "description": "Forbidden - Only logged users can access this route"
          }
        }
      },
      "delete": {
        "summary": "Delete user by ID - Only admin can access this route",
        "description": "Deletes a user from the system by their ID. This action is restricted to users with the 'admin' role.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "403": {
            "description": "Forbidden - Only admin can access this route"
          }
        }
      }
    },
    "/product": {
      "get": {
        "summary": "Get all products - Accessible by admin and user",
        "description": "Retrieves a list of all products in the system. Both admin and user roles can access this route.",
        "tags": ["Product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The product ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the product"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the product"
                      },
                      "price": {
                        "type": "number",
                        "format": "float",
                        "description": "The price of the product"
                      },
                      "stock": {
                        "type": "integer",
                        "description": "The stock quantity of the product"
                      },
                      "category": {
                        "type": "string",
                        "description": "The category of the product"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "URLs of the product images"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only admin and user roles can access this route"
          }
        }
      },
      "post": {
        "summary": "Create a new product - Only admin can access this route",
        "description": "Creates a new product in the system. This route is restricted to users with the 'admin' role.",
        "tags": ["Product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Laptop",
                    "description": "The name of the product"
                  },
                  "description": {
                    "type": "string",
                    "example": "High performance laptop",
                    "description": "A brief description of the product"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "example": 999.99,
                    "description": "The price of the product"
                  },
                  "stock": {
                    "type": "integer",
                    "example": 10,
                    "description": "The available stock quantity"
                  },
                  "category": {
                    "type": "string",
                    "example": "Electronics",
                    "description": "The category to which the product belongs"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "URLs of the product images"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product Created Successfully"
                    },
                    "product": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The product ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the product"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the product"
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "description": "The price of the product"
                        },
                        "stock": {
                          "type": "integer",
                          "description": "The available stock quantity"
                        },
                        "category": {
                          "type": "string",
                          "description": "The category of the product"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "URLs of the product images"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "403": {
            "description": "Forbidden - Only admin can access this route"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "summary": "Get a product by ID - Accessible by admin and user",
        "description": "Retrieves the details of a product by its ID. Both admin and user roles can access this route.",
        "tags": ["Product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the product to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Product data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The product ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the product"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the product"
                    },
                    "price": {
                      "type": "number",
                      "format": "float",
                      "description": "The price of the product"
                    },
                    "stock": {
                      "type": "integer",
                      "description": "The stock quantity of the product"
                    },
                    "category": {
                      "type": "string",
                      "description": "The category of the product"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "URLs of the product images"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found - No product with the specified ID exists"
          },
          "403": {
            "description": "Forbidden - Only admin and user roles can access this route"
          }
        }
      },
      "put": {
        "summary": "Fully update a product by ID - Only admin can access this route",
        "description": "Updates a product's details by its ID. This route requires the entire product object to be sent and is restricted to users with the 'admin' role.",
        "tags": ["Product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the product to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Laptop",
                    "description": "The updated name of the product"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated high performance laptop",
                    "description": "The updated description of the product"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "example": 899.99,
                    "description": "The updated price of the product"
                  },
                  "stock": {
                    "type": "integer",
                    "example": 5,
                    "description": "The updated stock quantity"
                  },
                  "category": {
                    "type": "string",
                    "example": "Electronics",
                    "description": "The updated category of the product"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "URLs of the updated product images"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product Updated Successfully"
                    },
                    "product": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The product ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "The updated name of the product"
                        },
                        "description": {
                          "type": "string",
                          "description": "The updated description of the product"
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "description": "The updated price of the product"
                        },
                        "stock": {
                          "type": "integer",
                          "description": "The updated stock quantity"
                        },
                        "category": {
                          "type": "string",
                          "description": "The updated category of the product"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "URLs of the updated product images"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "404": {
            "description": "Product not found - No product with the specified ID exists"
          },
          "403": {
            "description": "Forbidden - Only admin can access this route"
          }
        }
      },
      "patch": {
        "summary": "Partially update a product by ID - Only admin can access this route",
        "description": "Partially updates a product's details by its ID. This route allows updating specific fields and is restricted to users with the 'admin' role.",
        "tags": ["Product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the product to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Laptop",
                    "description": "The updated name of the product"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated high performance laptop",
                    "description": "The updated description of the product"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "example": 899.99,
                    "description": "The updated price of the product"
                  },
                  "stock": {
                    "type": "integer",
                    "example": 5,
                    "description": "The updated stock quantity"
                  },
                  "category": {
                    "type": "string",
                    "example": "Electronics",
                    "description": "The updated category of the product"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "URLs of the updated product images"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product Updated Successfully"
                    },
                    "product": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The product ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "The updated name of the product"
                        },
                        "description": {
                          "type": "string",
                          "description": "The updated description of the product"
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "description": "The updated price of the product"
                        },
                        "stock": {
                          "type": "integer",
                          "description": "The updated stock quantity"
                        },
                        "category": {
                          "type": "string",
                          "description": "The updated category of the product"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "URLs of the updated product images"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "404": {
            "description": "Product not found - No product with the specified ID exists"
          },
          "403": {
            "description": "Forbidden - Only admin can access this route"
          }
        }
      }
    },
    "/category": {
      "get": {
        "summary": "Get all categories - Accessible by admin and user",
        "description": "Retrieves a list of all categories in the system. Both admin and user roles can access this route.",
        "tags": ["Category"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The category ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the category"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the category"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only admin and user roles can access this route"
          }
        }
      },
      "post": {
        "summary": "Create a new category - Only admin can access this route",
        "description": "Creates a new category in the system. This route is restricted to users with the 'admin' role.",
        "tags": ["Category"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Electronics",
                    "description": "The name of the category"
                  },
                  "description": {
                    "type": "string",
                    "example": "Devices and gadgets",
                    "description": "A brief description of the category"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Category Created Successfully"
                    },
                    "category": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The category ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the category"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the category"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "403": {
            "description": "Forbidden - Only admin can access this route"
          }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "summary": "Get a category by ID - Accessible by admin and user",
        "description": "Retrieves the details of a category by its ID. Both admin and user roles can access this route.",
        "tags": ["Category"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the category to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Category data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The category ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the category"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the category"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found - No category with the specified ID exists"
          },
          "403": {
            "description": "Forbidden - Only admin and user roles can access this route"
          }
        }
      },
      "put": {
        "summary": "Update a category by ID - Only admin can access this route",
        "description": "Updates a category's details by its ID. This route requires the entire category object to be sent and is restricted to users with the 'admin' role.",
        "tags": ["Category"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the category to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Electronics",
                    "description": "The updated name of the category"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated description of electronics",
                    "description": "The updated description of the category"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Category Updated Successfully"
                    },
                    "category": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The category ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "The updated name of the category"
                        },
                        "description": {
                          "type": "string",
                          "description": "The updated description of the category"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "404": {
            "description": "Category not found - No category with the specified ID exists"
          },
          "403": {
            "description": "Forbidden - Only admin can access this route"
          }
        }
      }
    },
    "/cart": {
      "get": {
        "summary": "Get cart by user ID - Accessible by user and admin",
        "description": "Retrieves the cart for a specific user by their user ID. Accessible by both user and admin roles.",
        "tags": ["Cart"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user ID for which to retrieve the cart"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "string",
                            "description": "The ID of the product"
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The quantity of the product in the cart"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only user and admin roles can access this route"
          }
        }
      },
      "post": {
        "summary": "Add item to cart - Accessible by user and admin",
        "description": "Adds an item to the cart for a specific user. Accessible by both user and admin roles.",
        "tags": ["Cart"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The user ID for which to add the item"
                  },
                  "productId": {
                    "type": "string",
                    "description": "The ID of the product to add to the cart"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "The quantity of the product to add to the cart"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added to cart successfully"
          },
          "400": {
            "description": "Bad request - Invalid input data"
          }
        }
      },
      "put": {
        "summary": "Update item quantity in cart - Accessible by user and admin",
        "description": "Updates the quantity of an item in the cart for a specific user. Accessible by both user and admin roles.",
        "tags": ["Cart"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The user ID for which to update the item quantity"
                  },
                  "productId": {
                    "type": "string",
                    "description": "The ID of the product to update"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "The new quantity of the product in the cart"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item quantity updated successfully"
          },
          "400": {
            "description": "Bad request - Invalid input data"
          }
        }
      },
      "delete": {
        "summary": "Remove item from cart - Accessible by user and admin",
        "description": "Removes an item from the cart for a specific user. Accessible by both user and admin roles.",
        "tags": ["Cart"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The user ID for which to remove the item"
                  },
                  "productId": {
                    "type": "string",
                    "description": "The ID of the product to remove from the cart"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item removed from cart successfully"
          },
          "400": {
            "description": "Bad request - Invalid input data"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Get all orders with their details - Accessible by admin and user",
        "description": "Retrieves a list of all orders with their details. Accessible by both admin and user roles.",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of orders with their details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the order"
                      },
                      "user": {
                        "type": "string",
                        "description": "The user ID who placed the order"
                      },
                      "totalAmount": {
                        "type": "number",
                        "format": "float",
                        "description": "The total amount for the order"
                      },
                      "status": {
                        "type": "string",
                        "description": "The current status of the order"
                      },
                      "paymentMethod": {
                        "type": "string",
                        "description": "The payment method used for the order"
                      },
                      "shippingAddress": {
                        "type": "string",
                        "description": "The shipping address for the order"
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "type": "string",
                              "description": "The ID of the product"
                            },
                            "quantity": {
                              "type": "integer",
                              "description": "The quantity of the product ordered"
                            },
                            "price": {
                              "type": "number",
                              "format": "float",
                              "description": "The price of the product"
                            }
                          }
                        },
                        "description": "The details of products in the order"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only admin and user roles can access this route"
          }
        }
      },
      "post": {
        "summary": "Create a new order with order details - Accessible by admin and user",
        "description": "Creates a new order with its details. Accessible by both admin and user roles.",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "example": "userId123",
                    "description": "The user ID who is placing the order"
                  },
                  "totalAmount": {
                    "type": "number",
                    "format": "float",
                    "example": 299.99,
                    "description": "The total amount for the order"
                  },
                  "status": {
                    "type": "string",
                    "example": "Pending",
                    "description": "The initial status of the order"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "example": "Credit Card",
                    "description": "The payment method used for the order"
                  },
                  "shippingAddress": {
                    "type": "string",
                    "example": "123 Main St, Anytown, USA",
                    "description": "The shipping address for the order"
                  },
                  "orderDetails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "string",
                          "example": "productId123",
                          "description": "The ID of the product"
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 2,
                          "description": "The quantity of the product"
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "example": 149.99,
                          "description": "The price of the product"
                        }
                      }
                    },
                    "description": "The details of products in the order"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order and Order Details Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order and Order Details Created Successfully"
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the created order"
                        },
                        "user": {
                          "type": "string",
                          "description": "The user ID who placed the order"
                        },
                        "totalAmount": {
                          "type": "number",
                          "format": "float",
                          "description": "The total amount for the order"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the order"
                        },
                        "paymentMethod": {
                          "type": "string",
                          "description": "The payment method used"
                        },
                        "shippingAddress": {
                          "type": "string",
                          "description": "The shipping address for the order"
                        }
                      }
                    },
                    "orderDetails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "type": "string",
                            "description": "The ID of the order"
                          },
                          "productId": {
                            "type": "string",
                            "description": "The ID of the product"
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The quantity of the product"
                          },
                          "price": {
                            "type": "number",
                            "format": "float",
                            "description": "The price of the product"
                          }
                        }
                      },
                      "description": "The details of products in the order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "403": {
            "description": "Forbidden - Only admin and user roles can access this route"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Get order by ID with its details - Accessible by admin and user",
        "description": "Retrieves an order by its ID with its details. Accessible by both admin and user roles.",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the order to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Order data with details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the order"
                    },
                    "user": {
                      "type": "string",
                      "description": "The user ID who placed the order"
                    },
                    "totalAmount": {
                      "type": "number",
                      "format": "float",
                      "description": "The total amount for the order"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the order"
                    },
                    "paymentMethod": {
                      "type": "string",
                      "description": "The payment method used"
                    },
                    "shippingAddress": {
                      "type": "string",
                      "description": "The shipping address for the order"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "string",
                            "description": "The ID of the product"
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The quantity of the product"
                          },
                          "price": {
                            "type": "number",
                            "format": "float",
                            "description": "The price of the product"
                          }
                        }
                      },
                      "description": "The details of products in the order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          },
          "403": {
            "description": "Forbidden - Only admin and user roles can access this route"
          }
        }
      },
      "put": {
        "summary": "Update order and its details - Accessible by admin",
        "description": "Updates an order and its details by ID. Accessible only by admin roles.",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the order to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "example": "userId123",
                    "description": "The user ID who is placing the order"
                  },
                  "totalAmount": {
                    "type": "number",
                    "format": "float",
                    "example": 299.99,
                    "description": "The total amount for the order"
                  },
                  "status": {
                    "type": "string",
                    "example": "Shipped",
                    "description": "The updated status of the order"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "example": "Credit Card",
                    "description": "The payment method used for the order"
                  },
                  "shippingAddress": {
                    "type": "string",
                    "example": "123 Main St, Anytown, USA",
                    "description": "The shipping address for the order"
                  },
                  "orderDetails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "string",
                          "example": "productId123",
                          "description": "The ID of the product"
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 3,
                          "description": "The quantity of the product"
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "example": 199.99,
                          "description": "The price of the product"
                        }
                      }
                    },
                    "description": "The updated details of products in the order"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order and Order Details Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order and Order Details Updated Successfully"
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the updated order"
                        },
                        "user": {
                          "type": "string",
                          "description": "The user ID who placed the order"
                        },
                        "totalAmount": {
                          "type": "number",
                          "format": "float",
                          "description": "The total amount for the order"
                        },
                        "status": {
                          "type": "string",
                          "description": "The updated status of the order"
                        },
                        "paymentMethod": {
                          "type": "string",
                          "description": "The payment method used"
                        },
                        "shippingAddress": {
                          "type": "string",
                          "description": "The updated shipping address"
                        }
                      }
                    },
                    "orderDetails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "type": "string",
                            "description": "The ID of the order"
                          },
                          "productId": {
                            "type": "string",
                            "description": "The ID of the product"
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The quantity of the product"
                          },
                          "price": {
                            "type": "number",
                            "format": "float",
                            "description": "The price of the product"
                          }
                        }
                      },
                      "description": "The updated details of products in the order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "404": {
            "description": "Order not found"
          },
          "403": {
            "description": "Forbidden - Only admin roles can access this route"
          }
        }
      },
      "delete": {
        "summary": "Delete order and its details - Accessible by admin",
        "description": "Deletes an order and its details by ID. Accessible only by admin roles.",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the order to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Order and Order Details Deleted Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order and Order Details Deleted Successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          },
          "403": {
            "description": "Forbidden - Only admin roles can access this route"
          }
        }
      }
    }
  }
}
